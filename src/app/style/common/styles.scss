$easing: cubic-bezier(0, 0.6, 0.3, 1);

::selection { background-color: $color-contrast; }
::-moz-selection { background-color: $color-contrast; }

// Boxes
.box {
	border-radius: $border-radius;

	&:not(.horizontal):not(.vertical) {
		padding: $gutter/2;

		&.large {
			padding: $gutter;
		}

	  &.huge {
	    padding: $gutter*3;
	  }
	}

  &.horizontal {
    padding-left: $gutter/2;
    padding-right: $gutter/2;

      &.large {
        padding-left: $gutter;
        padding-right: $gutter;
      }

      &.huge {
        padding-left: $gutter*2;
        padding-right: $gutter*2;
      }
  }

  &.vertical {
    padding-bottom: $gutter/2;
    padding-top: $gutter/2;

      &.large {
        padding-bottom: $gutter;
        padding-top: $gutter;
      }

      &.huge {
        padding-bottom: $gutter*2;
        padding-top: $gutter*2;
      }
  }

	// The f ?
	// &.row {
	// 	margin-left: $gutter/2;
	// 	margin-right: $gutter/2;
	// }
}

.itemList {
  padding:0;
  margin:0;
}

// Cards
.card {
  @extend .box;
  @extend .space.vertical;
  align-self: auto;
  background-color: white;
  border-radius: $border-radius;
  box-sizing: border-box;
  display: flex;
  flex-flow: column nowrap;
  overflow: hidden;
  position: relative;

  h3,
  h4,
  p {
    margin: 0;
  }

}

// spacing
.space {
  margin: $gutter/2;

  &.horizontal {
    margin-left: $gutter/2;
    margin-right: $gutter/2;

      &.large {
        margin-left: $gutter;
        margin-right: $gutter;
      }

      &.huge {
        margin-left: $gutter*2;
        margin-right: $gutter*2;
      }
  }

  &.vertical {
    margin-bottom: $gutter/2;
    margin-top: $gutter/2;

      &.large {
        margin-bottom: $gutter;
        margin-top: $gutter;
      }

      &.huge {
        margin-bottom: $gutter*2;
        margin-top: $gutter*2;
      }
  }

  &.large {
		margin: $gutter;
	}

  &.huge {
    margin: $gutter*3;
  }
}
